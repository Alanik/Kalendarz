@model KalendarzKarieryData.Models.ViewModels.RegisterViewModel

<div id="registerPageContainer" class="slick-contact-form">
	<div class="form-header">
		<div id="btnClose-registerPopup" data-bind="click: closeRegisterPopupOnClick" class="btn-close"><span class="close-text">zamknij</span></div>
	</div>
	<div class="form-body">
		@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { id = "registerForm" }))
  {
			@Html.AntiForgeryToken()

			<fieldset>
				<legend>Rejestracja</legend>

				<div class="summary-validation-errors"></div>
				<ol>
					<li>

						@Html.LabelFor(m => m.RegisterModel.UserName, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.RegisterModel.UserName)
						</div>
						@Html.TextBoxFor(m => m.RegisterModel.UserName, new { maxlength = 30 })

					</li>
					<li>

						@Html.LabelFor(m => m.RegisterModel.Password, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.RegisterModel.Password)
						</div>
						@Html.PasswordFor(m => m.RegisterModel.Password, new { maxlength = 30 })

					</li>
					<li>

						@Html.LabelFor(m => m.RegisterModel.ConfirmPassword, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.RegisterModel.ConfirmPassword)
						</div>
						@Html.PasswordFor(m => m.RegisterModel.ConfirmPassword, new { maxlength = 30 })

					</li>
					<li>

						@Html.LabelFor(m => m.User.FirstName, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.User.FirstName)
						</div>
						@Html.TextBoxFor(m => m.User.FirstName, new { maxlength = 30 })

					</li>
					<li>
						@Html.LabelFor(m => m.User.LastName, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.User.LastName)
						</div>
						@Html.TextBoxFor(m => m.User.LastName, new { maxlength = 30 })

					</li>
					<li>
						@Html.LabelFor(m => m.User.Gender, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.User.Gender)
						</div>
						@Html.DropDownList("User.Gender",
	new SelectList(new Dictionary<string, string> 
        {
            {"Mężczyzna", "m"},
            {"Kobieta", "k"},
        },
		"Value", "Key")
)
					</li>
					<li>

						@Html.LabelFor(m => m.User.BirthDay, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.BirthDateModel.Day)
						</div>
						<div>
							@Html.ValidationMessageFor(m => m.BirthDateModel.Month)
						</div>
						<div>
							@Html.ValidationMessageFor(m => m.BirthDateModel.Year)
						</div>
						<div>
						<span id="birthDateValidationErrorMsg" class="field-validation-error" style="display:none">Nieprawidłowa data.</span>
						</div>

						@Html.TextBoxFor(m => m.BirthDateModel.Day , string.Empty, new { id="birthDateDayTxtBox", @class = "register-birthdate-txtbox", placeholder = "dzień", maxlength = 2 }) <span style="color: #b3aba1;"> / </span>@Html.TextBoxFor(m => m.BirthDateModel.Month, string.Empty, new { id="birthDateMonthTxtBox", @class = "register-birthdate-txtbox", placeholder = "miesiąc", maxlength = 2 }) <span style="color: #b3aba1;"> / </span>@Html.TextBoxFor(m => m.BirthDateModel.Year, string.Empty, new { id="birthDateYearTxtBox", @class = "register-birthdate-txtbox", placeholder = "rok", maxlength = 4 })

					</li>
					<li>

						@Html.LabelFor(m => m.Address.Street, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.Address.Street)
						</div>
						@Html.TextBoxFor(m => m.Address.Street, new { maxlength = 50 })

					</li>
					<li>

						@Html.LabelFor(m => m.Address.City, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.Address.City)
						</div>
						@Html.TextBoxFor(m => m.Address.City, new { maxlength = 30 })

					</li>
					<li>

						@Html.LabelFor(m => m.Address.ZipCode, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.Address.ZipCode)
						</div>
						@Html.TextBoxFor(m => m.Address.ZipCode, new { maxlength = 6, placeholder="00-000", style="width:50px !important;" })

					</li>
					<li>
						@Html.LabelFor(m => m.Address.Country, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.Address.Country)
						</div>
						@Html.TextBoxFor(m => m.Address.Country, new { maxlength = 30 })
					</li>
					<li>
						@Html.LabelFor(m => m.User.Email, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.User.Email)
						</div>
						@Html.TextBoxFor(m => m.User.Email, new { maxlength = 30 })

					</li>
					<li>
						@Html.LabelFor(m => m.User.Phone, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.User.Phone)
						</div>
						@Html.TextBoxFor(m => m.User.Phone, new { maxlength = 20 })

					</li>
					<li>
						@Html.LabelFor(m => m.User.WebSiteUrl, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.User.WebSiteUrl)
						</div>
						@Html.TextBoxFor(m => m.User.WebSiteUrl, new { maxlength = 50 })

					</li>
					<li>
						@Html.LabelFor(m => m.User.Bio, new { @class = "form-label" })
						<div>
							@Html.ValidationMessageFor(m => m.User.Bio)
						</div>
						@Html.TextAreaFor(m => m.User.Bio, new { cols = 50, rows = 5, maxlength = 300 })
					</li>
				</ol>
				<input type="button" id="registerFormBtn" class="myButton-white" value="Utwórz konto" data-bind="click: $root.registerUserOnClick" />
			</fieldset>
  }
		<p>
			<span class="link" id="showLoginFormBtn" data-bind="click: $root.showLoginFormOnClick">Zaloguj się</span><span> jeśli już posiadasz własne konto.</span>
		</p>
	</div>


</div>
