<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<title>Kalendarz Kariery</title>
	@*<link href='http://fonts.googleapis.com/css?family=Oxygen:400,300,700&subset=latin,latin-ext' rel='stylesheet' type='text/css'>*@
	<link rel="icon" href="@Url.Content( "~/Images/Ico/favicon.ico" )"/>

	@Styles.Render( "~/Content/css" )
	@Scripts.Render( "~/bundles/jquery" )
	@Scripts.Render( "~/bundles/jqueryval" )
	@Scripts.Render( "~/bundles/jqueryui" )
	@Scripts.Render( "~/bundles/modernizr" )
	@Scripts.Render( "~/bundles/knockout" )

</head>
<body>
	<header>
	</header>

	<section id="mainContainer">
		<div id="spinnerContainer"><span id="spinnerText"></span></div>
		<div id="layoutLogo">
		</div>

		@RenderBody()

	</section>

	<script type="text/javascript">
		window.spinner = null;
	</script>

	<script src="~/Scripts/Lib/raphael-min.js"></script>
	<script src="~/Scripts/Lib/SpinJS/spin.min.js"></script>
	<script src="~/Scripts/KnockoutCustomBindings/KOCustomBindings.js"></script>
	<script src="~/Scripts/CalendarWidget/calendarWidget.js"></script>
	<script src="~/Scripts/CalendarWidget/Slider/jquery.animate-enhanced.min.js"></script>
	<script src="~/Scripts/CalendarWidget/Slider/jquery.easing.1.3.js"></script>
	<script src="~/Scripts/CalendarWidget/Slider/jquery.superslides.min.js"></script>

	<script src="~/Scripts/JSModels/KKEventModel.js"></script>
	<script src="~/Scripts/JSModels/KKEventModelObservable.js"></script>
	<script src="~/Scripts/JSModels/KKDateModel.js"></script>
	<script src="~/Scripts/JSModels/KKEventDateModel.js"></script>

	<script src="~/Scripts/JSViewModels/CalendarViewModel.js"></script>
	<script src="~/Scripts/Helpers/EventColorHelper.js"></script>
	<script src="~/Scripts/Helpers/EventTreeBuilder.js"></script>


	<script type="text/javascript">

		$(function () {

			var mainProgram  = {

				initialize: function () {
					var $calendar = $("#calendar");
					var $details = $("#details");
					var $lobby = $("#lobby");
					var eventTreeBuilder = new EventTreeBuilder();

					var date = new Date();
					$calendar.calendarWidget({
						month: date.getMonth(), year: date.getFullYear()
					});

					var indexViewModel = @Html.Raw( Json.Encode( @Model.IndexViewModel ) );

					var currentWeekday = $calendar.find(".today-cell").attr("weekday");
					var calendarViewModel = new CalendarViewModel(date.getFullYear(), date.getMonth() + 1, date.getDate(), currentWeekday, '@User.Identity.Name', this.spinner);	
				
				calendarViewModel.eventPrivacyLevels = indexViewModel.PrivacyLevels;
				calendarViewModel.eventKinds = indexViewModel.EventKinds;				
				calendarViewModel.publicEventTree = eventTreeBuilder.buildEventTree(indexViewModel.PublicEvents, calendarViewModel.setCalendarPlacementRow, calendarViewModel.publicEvents);
				calendarViewModel.publicEventTreeCountBasedOnEventKind = eventTreeBuilder.buildEventTreeCountBasedOnEventKind(indexViewModel.PublicEventCountTree);			
				calendarViewModel.newsEvents = eventTreeBuilder.transformNews(indexViewModel.News);

				if (indexViewModel.MyEvents) {

					calendarViewModel.myEventTree = eventTreeBuilder.buildEventTree(indexViewModel.MyEvents, calendarViewModel.setCalendarPlacementRow);
					calendarViewModel.myEventTreeCountBasedOnEventKind = eventTreeBuilder.buildEventTreeCountBasedOnEventKind(indexViewModel.MyEventCountTree);

					console.log(calendarViewModel.myEventTree);

					//console.log(calendarViewModel.publicEvents);
					//console.log(calendarViewModel.publicEventTree);
					//console.log(calendarViewModel.publicEventTreeCountBasedOnEventKind);

					/////////////////////////////////////////////////////////////////////////
					//draw events to the calendar
					/////////////////////////////////////////////////////////////////////////
					var yearProp = calendarViewModel.myEventTree[calendarViewModel.calendarPageDisplayDate.year()];
					var events, month, nextMonth, prevMonth, event;

					if (yearProp) {
						month = yearProp[calendarViewModel.calendarPageDisplayDate.month()]
						if (month) {
							for (var days in month) {
								events = month[days];
								for (var i = 0; i < events.length; i++) {
									event = events[i];

									calendarViewModel.drawEventToCalendar(event);
								}
							}
						}
						prevMonth = yearProp[calendarViewModel.calendarPageDisplayDate.month() - 1];
						if (prevMonth) {
							for (var days in prevMonth) {
								events = prevMonth[days];
								for (var i = 0; i < events.length; i++) {
									event = events[i];

									calendarViewModel.drawEventToCalendar(event);
								}
							}
						}
						nextMonth = yearProp[calendarViewModel.calendarPageDisplayDate.month() + 1]; 
						if (nextMonth) {
							for (var days in nextMonth) {
								events = nextMonth[days];
								for (var i = 0; i < events.length; i++) {
									event = events[i];

									calendarViewModel.drawEventToCalendar(event);
								}
							}
						}
					}
				}

					//////////////////////////////////////////////////////////////////
					//initialize details page
					//////////////////////////////////////////////////////////////////
				calendarViewModel.displayPageEventMostBottomRow = 1;
				calendarViewModel.detailsPageDisplayDate.year(date.getFullYear());
				calendarViewModel.detailsPageDisplayDate.month(date.getMonth() + 1);
				calendarViewModel.detailsPageDisplayDate.day(date.getDate());
				calendarViewModel.detailsPageDisplayDate.weekday(currentWeekday);

				var events = calendarViewModel.getEventsForGivenDay(date.getDate())
				calendarViewModel.detailsPageDayEvents(events);
					///////////////////////////////////////////////////////////////////

					///////////////////////////////////////////////////////////////F///
					//Knockout apply bindings
					///////////////////////////////////////////////////////////////////
				ko.applyBindings(calendarViewModel);
					///////////////////////////////////////////////////////////////////
			
					///////////////////////////////////////////////////////////////////
					//draw to details page
					//////////////////////////////////////////////////////////////////

					//method drawEventToDetailsDayTable(events[i]) needs to be called after ko.applyBindings(calendarViewModel)!
				for (var i in events) {
					calendarViewModel.drawEventToDetailsDayTable(events[i]);
				}

				var $tableBody = $("#calendarDayDetailsTable .table-details-body");
				var h = (calendarViewModel.displayPageEventMostBottomRow + 1) * 46;
				$tableBody.height(h + "px");
					///////////////////////////////////////////////////////////////////

				this.initializeSlides = function(){
					location.hash = '#0';

					$('#slides').superslides({
						slide_easing: 'easeInOutCubic',
						slide_speed: 600,
						pagination: true,
						hashchange: true,
						scrollable: true
					});

					$(window).on("hashchange", function(){
					
						setTimeout(function(){
							if(location.hash === "#1")
							{
								if (calendarViewModel.calendarDayEventsToUpdate.events !== null) {
									setTimeout(function(){
										calendarViewModel.redrawCalendarCell(calendarViewModel.calendarDayEventsToUpdate.events, calendarViewModel.calendarDayEventsToUpdate.day);
										calendarViewModel.calendarDayEventsToUpdate.events = null;

									}, 10)
								}
						
								//TODO: not finished set dynamic height of calendar cells (calendar to be as height as browser window)
								//setTimeout(function(){				
								
								//	var height1 = $("#calendar #calendarMenuHeader").height();
								//	var height2 = $("#calendar .weekday-container").height();
								//	var height3 = $("#calendar .calendar-hours-placeholder").first().height();
								//	var height4 = 42;
								//	var winHeight = $(window).height();

								//	var cellHeight = (winHeight - (height1 + height2 + height3 + 60)) / 6;

								//	$("#calendar .calendar-cell").css("height", cellHeight);

								//	console.log(cellHeight);

								//}, 10)

							}}, 10);
					});

					$(".slides-pagination a").on("click", function(){				
						var hash = $(this).attr("href");
						if (hash === "#2") {
							var $scrollable = $("#slide-item-details").parent();
							
							setTimeout(function(){				
								$scrollable.scrollTop(0);
							}, 10)							
						}
					});
				}();

					//////////////////////////////////////
					////hide loader
					//////////////////////////////////////
					//(function(){
					//	debugger;

					//	var $target = $("#spinnerContainer");
					//	mainProgram.spinner.stop();
					//	$target.hide();
					//})()
					///////////////////////////////////

				$calendar.append('<div id="calendar-navigation-arrows-left"><img src="Images/Nav/arrowLeft.png" alt="arrow-left"/></div>');
				$calendar.append('<div id="calendar-navigation-arrows-right"><img src="Images/Nav/arrowRight.png" alt="arrow-Right"/></div>');
				$details.append('<div id="details-navigation-arrows-left"><img src="Images/Nav/arrowLeft.png" alt="arrow-Left"/></div>');
				$lobby.append('<div id="lobby-navigation-arrows-right"><img src="Images/Nav/arrowRight.png" alt="arrow-Right"/></div>');

				calendarViewModel.drawAnalogClock();
				calendarViewModel.drawDigitalClock();

				this.initialize.initializeHover = function () {

					var $container = $(".event-hover-container");
					var $mainContainer = $("#mainContainer");

					$mainContainer.on({
						mouseenter: function () {

							var name = $(this).find("input").attr("name");
							var address = $(this).find("input").attr("address");
							var startHour = $(this).find("input").attr("starthour");
							var endHour = $(this).find("input").attr("endhour");
							var startMinute = $(this).find("input").attr("startminute");
							var endMinute = $(this).find("input").attr("endminute");

							var width = $(this).width();
							var height = $(this).height();
							var offset = $(this).offset();

							$container.css("left", offset.left - 100 + width);
							$container.css("top", offset.top - height);

							$container.find(".event-hover-name").text(name);
							$container.find(".event-hover-adress").text(address);
							$container.find(".event-hover-startHour").text(startHour + " : " + startMinute);
							$container.find(".event-hover-endHour").text(endHour + " : " + endMinute);

							$container.show();
						},
						mouseleave: function () {
							$container.hide();
						}
					}, '.event-rectangle');

					//TODO: since also using css : hover, maybe remove jquery code?
					$(".hover-cursor-pointer").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
					});

					//TODO: since also using css : hover, maybe remove jquery code?
					$(".link").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
					});

					//$mainContainer.on({
					//	mouseenter: function () {
					//		$(this).css({
					//			"cursor": "pointer",
					//			"background" : "rgb(253,253,253)"
					//		});
					//	},
					//	mouseleave: function () {
					//		$(this).css({
					//			"cursor": "auto",
					//			"background" : "rgb(248,248,248)"
					//		});
					//	}
					//}, '.event-block');

					$mainContainer.on({
						mouseenter: function () {
							$(this).css({
								"border-bottom": "2px solid rgb(235,235,235)",
								"border-top": "2px solid rgb(250,250,250)",
								"cursor": "pointer",
								"-moz-box-shadow": "none",
								"-webkist-box-shadow": "none",
								"box-shadow": "none",
								"top": "3px"
							}).find(".addNewEvent-cellIcon").fadeIn();
						},
						mouseleave: function () {
							$(this).css({
								"border": "2px solid white",
								"cursor": "auto",
								"-moz-box-shadow": "0px 3px 5px rgb(235,235,235)",
								"-webkist-box-shadow": "0px 3px 5px rgb(235,235,235)",
								"box-shadow": "0px 3px 5px rgb(235,235,235)",
								"top": "0"
							}).find(".addNewEvent-cellIcon").hide();
						}
					}, '.current-month-cell');

					$mainContainer.on({
						mouseenter: function () {
							$(this).css({
								"cursor": "pointer",
								//"-moz-box-shadow": "none",
								//"-webkist-box-shadow": "none",
								//"box-shadow": "none",
								"top": "3px"
							}).find(".addNewEvent-cellIcon").fadeIn();
						},
						mouseleave: function () {
							$(this).css({
								"cursor": "auto",
								//"-moz-box-shadow": "0px 3px 5px #ddd",
								//"-webkist-box-shadow": "0px 3px 5px #ddd",
								//"box-shadow": "0px 3px 5px #ddd",
								"top": "0px"
							}).find(".addNewEvent-cellIcon").fadeOut();
						}
					}, '.other-month-cell');

					$mainContainer.on({
						mouseenter: function () {
							$(this).css("background", "rgb(160, 243, 169)");
						},
						mouseleave: function () {
							$(this).css("background", "rgb(225,225,225)");
						}
					}, '.light-icon');

					$mainContainer.on({
						mouseenter: function () {
							$(this).css("background", "rgb(160, 243, 169)");
						},
						mouseleave: function () {
							$(this).css("background", "rgb(188,188,188)");
						}
					}, '.dark-icon');

					$mainContainer.on({
						mouseenter: function () {
							$(this).css({
								"cursor": "pointer"
							});
						},
						mouseleave: function () {
							$(this).css({
								"cursor": "auto"
							});
						}
					}, ".month-name-calendar");

					$(".menu-item").hover(function () {
						$(this).css({
							"cursor": "pointer",
							"background": "white"
						});
					}, function () {
						var bgColor = $(this).parent().hasClass("selected") ? 'rgb(252,252,252)' : 'rgb(223, 215, 188)'; 
						$(this).css({
							"cursor": "auto",
							"background": bgColor
						});
					});

					var $leftSideCalendar = $("#leftSideCalendar");
					var $rightSideCalendar = $("#rightSideCalendar");
					var $leftSideDetails = $("#leftSideDetails");
					var $rightSideLobby = $("#rightSideLobby");
					var $rightSideLobbyTopPart = $("#rightSideLobbyTopPart");

					$leftSideCalendar.hover(function () {
						$(this).css({
							"backgroundPosition": "left",
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							"backgroundPosition": "right",
							"cursor": "auto"
						});
					});
					$("#calendar-navigation-arrows-left").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});

						$leftSideCalendar.css({
							"backgroundPosition": "left"
						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
						$leftSideCalendar.css({
							"backgroundPosition": "right"
						});
					});
					$rightSideCalendar.hover(function () {
						$(this).css({
							"backgroundPosition": "right",
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							"backgroundPosition": "left",
							"cursor": "auto"
						});
					});
					$("#calendar-navigation-arrows-right").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});

						$rightSideCalendar.css({
							"backgroundPosition": "right"
						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
						$rightSideCalendar.css({
							"backgroundPosition": "left"

						});
					});

					$("#lobby-navigation-arrows-right").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});

						$rightSideLobby.css({
							"backgroundPosition": "right"

						});

						$rightSideLobbyTopPart.css({
							"backgroundPosition": "right"

						});

					}, function () {
						$(this).css({
							"cursor": "auto"
						});
						$rightSideLobby.css({
							"backgroundPosition": "left"

						});

						$rightSideLobbyTopPart.css({
							"backgroundPosition": "left"

						});
					});

					$("#details-navigation-arrows-left").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});

						$leftSideDetails.css({
							"backgroundPosition": "left"

						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
						$leftSideDetails.css({
							"backgroundPosition": "right"

						});
					});
					$leftSideDetails.hover(function () {
						$(this).css({
							"backgroundPosition": "left",
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							"backgroundPosition": "right",
							"cursor": "auto"
						});
					});

					$rightSideLobby.hover(function () {
						$(this).css({
							"backgroundPosition": "right",
							"cursor": "pointer"
						});

						$rightSideLobbyTopPart.css({
							"backgroundPosition": "right"

						});

					}, function () {
						$(this).css({
							"backgroundPosition": "left",
							"cursor": "auto"
						});

						$rightSideLobbyTopPart.css({
							"backgroundPosition": "left"

						});
					});

					$rightSideLobbyTopPart.hover(function () {
						$(this).css({
							"backgroundPosition": "right",
							"cursor": "pointer"
						});

						$rightSideLobby.css({
							"backgroundPosition": "right"

						});

					}, function () {
						$(this).css({
							"backgroundPosition": "left",
							"cursor": "auto"
						});

						$rightSideLobby.css({
							"backgroundPosition": "left"

						});
					});

					var $pixHover = $(".1px-hover");

					$pixHover.hover(function () {
						$(this).css({
							"bottom": "0"
						});
					}, function () {
						$(this).css({
							"bottom": "1px"
						});
					});

					$("#btnAddNewEvent").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
					});

					$(".login-link").hover(function () {
						$(this).css({
							"color":"rgb(73, 226, 140)"						
						});
					}, function () {
						$(this).css({
							"color":"gray"
						});
					});

				}();

				this.initialize.initializeClick = function () {
					//TODO: validation of dates into separate initialize method

					//register user
					var $txtbox = $("#registerPageContainer .register-birthdate-txtbox");
					$txtbox.keyup(function(){			
						$("#registerPageContainer #birthDateValidationErrorMsg").hide();
						$txtbox.removeClass("input-validation-error");			
					});

					var $txtbox = $("#addNewEventContainer .event-startdate-txtbox");
					$txtbox.keyup(function(){			
						$("#addNewEventContainer #dateValidationErrorMsg").hide();
						$txtbox.removeClass("input-validation-error");			
					});

					//add new event end hour and end minute select box
					var $endDate = $("#addNewEventContainer .end-date-selectbox");
					$endDate.change(function(){
						$endDate.removeClass("input-validation-error");
						$("#addNewEventContainer #endDateValidationErrorMsg").hide();
					});

					//$(".szkolenia-btn").click(function () {
					//	$(".selected-content-container").slideUp("slow");
					//});

					//$(".menu-item-container").click(function () {

					//	$(".selected-content-container").slideDown("slow");
					//});

					//$(".moje-sprawy-text").click(function () {

					//	$("#moje-sprawy-container").slideDown();
					//});

					//$(".moje-sprawy-btn").click(function () {

					//	$("#moje-sprawy-container").slideUp();
					//});

					var $mainContainer = $("#mainContainer");

					//$mainContainer.on("click", ".calendar-cell", function (event) {
					//	window.location = "#2";
					//});

					$mainContainer.on("click", "#leftSideCalendar", function (event) {
						window.location = "#0";
					});
					$mainContainer.on("click", "#calendar-navigation-arrows-left", function (event) {
						window.location = "#0";
					});
					$mainContainer.on("click", "#rightSideCalendar", function (event) {
						window.location = "#2";
					});
					$mainContainer.on("click", "#calendar-navigation-arrows-right", function (event) {
						window.location = "#2";
					});
					$mainContainer.on("click", "#rightSideLobby", function (event) {
						window.location = "#1";
					});
					$mainContainer.on("click", "#lobby-navigation-arrows-right", function (event) {
						window.location = "#1";
					});
					$mainContainer.on("click", "#leftSideDetails", function (event) {
						window.location = "#1";
					});
					$mainContainer.on("click", "#details-navigation-arrows-left", function (event) {
						window.location = "#1";
					});

				}();

				}
			};

			///////////////////////////////////////////
			//PROGRAM START
			///////////////////////////////////////////

			(function () {
				var $container = $("#spinnerContainer");

				//Get the window height and width
				var winH = $(window).height();
				var winW = $(window).width();

				//Set the popup window to center
				$container.css('top', winH / 2 - $container.height() / 2);
				$container.css('left', winW / 2 - $container.width() / 2);

			})();

			//////////////////////////////////////////////////////////
			//ajax loader 
			//////////////////////////////////////////////////////////
			var opts = {
				lines: 17, // The number of lines to draw
				length: 17, // The length of each line
				width: 4, // The line thickness
				radius: 20, // The radius of the inner circle
				corners: 1, // Corner roundness (0..1)
				rotate: 0, // The rotation offset
				direction: 1, // 1: clockwise, -1: counterclockwise
				color: '#FFF', // #rgb or #rrggbb or array of colors
				speed: 1, // Rounds per second
				trail: 80, // Afterglow percentage
				shadow: false, // Whether to render a shadow
				hwaccel: false, // Whether to use hardware acceleration
				className: 'spinner', // The CSS class to assign to the spinner
				zIndex: 2e9, // The z-index (defaults to 2000000000)
				top: '50%', // Top position relative to parent
				left: '50%' // Left position relative to parent
			};

			mainProgram.spinner = new Spinner( opts );

			//used in jquery.superslides to turn spinner off when superslides fades in.
			window.spinner = mainProgram.spinner;

			(function(){
				var $target = $("#spinnerContainer");
				mainProgram.spinner.spin($target[0]);
				$target.show();
			})()

			mainProgram.initialize();
		});

	</script>

</body>

</html>
