@model KalendarzKarieryData.Models.ViewModels.IndexViewModel

<div class="navigation-arrows"></div>

<div id="slides">
	<ul class="slides-container">
		<li>
			<div id="slide-item-lobby">
				<div id="siteNavLegendContainer">
					<div style="margin: 0 auto; margin-top: 16px; position: relative;">
						<div class="site-legend-border"></div>
						<div class="site-legend-border"></div>
						<div class="site-legend-border"></div>
					</div>
					<span>strona glówna</span>
					<span>kalendarz</span>
					<span>panel</span>
				</div>
				<div id="lobbyBg">
					<img src="~/Images/kalendarzTloClear.png" alt="background" style="top: 0 !important" />
					<div class="dotted-page-overlay"></div>
					<div class="loader-container">wczytywanie...</div>
					<section id="lobby" class="main-section">
						@Html.Partial("_Lobby")
					</section>

				</div>
				<div id="rightSideLobby" class="side"></div>

			</div>
		</li>
		<li>
			<div id="slide-item-calendar">
				<div id="leftSideCalendar" class="side">
				</div>
				<div id="calendarBg">
					<img src="~/Images/kalendarzTlo.png" alt="background" />
					<div class="dotted-page-overlay"></div>
					<div class="loader-container">wczytywanie...</div>
					<section id="calendar" class="main-section">

						<!-- Calendar is added dynamically (calendarWidget.js)   -->

					</section>

					@Html.Partial("_AddNewEvent", new KalendarzKarieryData.Models.ViewModels.AddEventViewModel())
					@Html.Partial("_HoverEvent")

					<section id="calendarListView">
					</section>
				</div>
				<div id="rightSideCalendar" class="side"></div>
			</div>
		</li>
		<li>
			<div id="slide-item-details">
				<div id="detailsBg">
					<img src="~/Images/kalendarzTloClear.png" alt="background" />
					<div class="dotted-page-overlay"></div>
					<div class="loader-container">wczytywanie...</div>
					<div id="details" class="main-section">
						@Html.Partial("_Details")
					</div>
				</div>
				<div id="leftSideDetails" class="side">
				</div>
			</div>
		</li>
	</ul>
</div>

<script src="~/Scripts/Helpers/EventColorHelper.js"></script>
<script src="~/Scripts/Helpers/CalendarViewModelConverter.js"></script>

<script type="text/javascript">

	$(function () {

		var mainProgram = {
			Initialize: function () {

				var $calendar = $("#calendar");
				var $details = $("#details");
				var $lobby = $("#lobby");

				var date = new Date();
				$calendar.calendarWidget({
					month: date.getMonth(), year: date.getFullYear()
				});

				var calendarViewModel = new CalendarViewModel(date.getFullYear(), date.getMonth(), date.getDate());

				var indexViewModel = @Html.Raw(Json.Encode(@Model));

				////////////////////////////////////////////
				//build event tree
				////////////////////////////////////////////
				var buildEventTree = function (myEvents, eventTree) {

					var groups = myEvents.eventsGroupedByDay;
					var groupsLength = myEvents.eventsGroupedByDay.length;
					var dayGroup, day, dayGroupLength, event;

					var year = myEvents.year;
					var month = myEvents.month;

					var eventTreeYearProp = eventTree[year] ? eventTree[year] : eventTree[year] = {};
					var eventTreeMonthProp = eventTreeYearProp[month] = {};
					var eventTreeDayGroupProp;
					var eventTreeEventsProp;

					var tempList;

					//event day groups
					for (var i = 0; i < groupsLength; i++) {
						dayGroup = groups[i];
						day = dayGroup.day;
						dayGroupLength = dayGroup.events.length;

						eventTreeDayGroupProp = eventTreeMonthProp[day] = [];

						tempList = [];

						// events in the day group
						for (var j = 0; j < dayGroupLength; j++) {
							event = dayGroup.events[j];

							setAddress(event);
							setKind(event);
							setStartDate(event);
							setCalendarPlacementRow(event, tempList, j);

							eventTreeDayGroupProp.push(event);				 
						}
					}

					//TODO: put it into converter object or something like that
					function setKind(event)
					{
						var colorHelper = new EventColorHelper();
						event.kind.color = colorHelper.calculatePrivateEventColor(event.kind.value);
						event.kind.headerColor = colorHelper.calculateEventHeaderTxtColor(event.kind.value);
					}
					function setStartDate(event) {
						var date = new Date(parseInt(event.startDate.substr(6)));

						var length = parseInt(event.eventLengthInMinutes, 10);

						var minutes = (length % 60);
						var hours = (length - minutes) / 60;

						var transformedDate = {
							"startMinute": date.getMinutes(),
							"endMinute": minutes,
							"startHour": date.getHours(),
							"endHour": (date.getHours() + hours),
							"day": date.getDate(),
							"month": date.getMonth(),
							"year": date.getFullYear()
						};

						event.startDate = transformedDate;
					};
					function setAddress(event){

						if (typeof event.address == 'undefined' || !address) {
							event.address = {
								street: "",
								city: "",
								zipCode: ""
							}
						}
					};
					function setCalendarPlacementRow(event, eventsInTheSameDay, j){
						var len = eventsInTheSameDay.length;
						var anotherEvent;

						var eStartH = event.startDate.startHour;
						var eEndH = event.startDate.endHour;
						var eStartM = event.startDate.starMinute;
						var eEndM = event.startDate.endMinute

						// is not first element
						if (j > 0) {
    
							for (var i = 0; i < len; i++) {
								anotherEvent = eventsInTheSameDay[i];

								var aeStartH = anotherEvent.startDate.startHour;
								var aeEndH = anotherEvent.startDate.endHour;
								var aeStartM = anotherEvent.startDate.starMinute;
								var aeEndM = anotherEvent.startDate.endMinute

								//eventStartTime < anotherEventEndTime || eventEndTime > anotherEventStartTime
								if ((eStartH < aeEndH || (eStartH == aeEndH && eStartM < aeEndM)) || (eEndH > aeStartH || eEndH == aeStartH && eEndM > aeStartM)) {
									//there is conflict
									if (event.calendarPlacementRow == anotherEvent.calendarPlacementRow) {
										event.calendarPlacementRow ++;
									}

								}
							}
						}

						eventsInTheSameDay.push(event);
					}
				};	
				buildEventTree(indexViewModel.MyEvents, calendarViewModel.eventTree);

				console.log(calendarViewModel.eventTree);
				////////////////////////////////////////////

				var CvmConverter = new CalendarViewModelConverter();

				calendarViewModel.eventPrivacyLevels = indexViewModel.PrivacyLevels;
				calendarViewModel.eventKinds = CvmConverter.getCalendarViewModelEventKinds(indexViewModel.EventKinds);		
			
				var monthProp = calendarViewModel.eventTree[calendarViewModel.calendarPageDisplayDate.year];
				var events, len, groups;

				if (monthProp) {
					groups = monthProp[calendarViewModel.calendarPageDisplayDate.month + 1]

					for (var p in groups) {
						events = groups[p];
						len = events.length;
						for (var i = 0; i < len; i++) {
							calendarViewModel.privateEvents.push(events[i]);
						}
					}
				}

				ko.applyBindings(calendarViewModel);

				console.log(calendarViewModel.privateEvents)

				var peLen = calendarViewModel.privateEvents.length;
				for (var i = 0; i < peLen; i++) {
					calendarViewModel.drawEventToCalendar(calendarViewModel.privateEvents[i]);
				}
					
				$calendar.append('<div class="calendar-navigation-arrows-left"><img src="Images/Nav/arrow-Left.png" alt="arrow-left"/></div>');
				$calendar.append('<div class="calendar-navigation-arrows-right"><img src="Images/Nav/arrow-Right.png" alt="arrow-Right"/></div>');
				$details.append('<div class="details-navigation-arrows-left"><img src="Images/Nav/arrow-Left.png" alt="arrow-Left"/></div>');
				$lobby.append('<div class="lobby-navigation-arrows-right"><img src="Images/Nav/arrow-Right.png" alt="arrow-Right"/></div>');

				this.Initialize.InitializeHover = function () {

					var $container = $(".event-hover-container");
					var $mainContainer = $("#mainContainer");

					$mainContainer.on({
						mouseenter: function () {

							var name = $(this).find("input").attr("name");
							var address = $(this).find("input").attr("address");
							var startHour = $(this).find("input").attr("starthour");
							var endHour = $(this).find("input").attr("endhour");
							var startMinute = $(this).find("input").attr("startminute");
							var endMinute = $(this).find("input").attr("endminute");

							var width = $(this).width();
							var height = $(this).height();
							var offset = $(this).offset();

							$container.css("left", offset.left - 100 + width);
							$container.css("top", offset.top - height);

							$container.find(".event-hover-name").text(name);
							$container.find(".event-hover-adress").text(address);
							$container.find(".event-hover-startHour").text(startHour + " : " + startMinute);
							$container.find(".event-hover-endHour").text(endHour + " : " + endMinute);

							$container.show();
						},
						mouseleave: function () {
							$container.hide();
						}
					}, '.event-rectangle');

					$(".hover-cursor-picker").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
					});

					$mainContainer.on({
						mouseenter: function () {
							$(this).css({
								"border-bottom": "2px solid rgb(235,235,235)",
								"border-top": "2px solid rgb(250,250,250)",
								"cursor": "pointer",
								"-moz-box-shadow": "none",
								"-webkist-box-shadow": "none",
								"box-shadow": "none",
								"top": "3px"
							}).find(".addNewEvent-cellIcon").fadeIn();
						},
						mouseleave: function () {
							$(this).css({
								"border": "2px solid white",
								"cursor": "auto",
								"-moz-box-shadow": "0px 3px 5px rgb(235,235,235)",
								"-webkist-box-shadow": "0px 3px 5px rgb(235,235,235)",
								"box-shadow": "0px 3px 5px rgb(235,235,235)",
								"top": "0"
							}).find(".addNewEvent-cellIcon").hide();
						}
					}, '.current-month-cell');

					$mainContainer.on({
						mouseenter: function () {
							$(this).css({
								"cursor": "pointer",
								//"-moz-box-shadow": "none",
								//"-webkist-box-shadow": "none",
								//"box-shadow": "none",
								"top": "3px"
							}).find(".addNewEvent-cellIcon").fadeIn();
						},
						mouseleave: function () {
							$(this).css({
								"cursor": "auto",
								//"-moz-box-shadow": "0px 3px 5px #ddd",
								//"-webkist-box-shadow": "0px 3px 5px #ddd",
								//"box-shadow": "0px 3px 5px #ddd",
								"top": "0px"
							}).find(".addNewEvent-cellIcon").fadeOut();
						}
					}, '.other-month-cell');

					$mainContainer.on({
						mouseenter: function () {
							$(this).css("background", "rgb(160, 243, 169)");
						},
						mouseleave: function () {
							$(this).css("background", "rgb(225,225,225)");
						}
					}, '.light-icon');

					$mainContainer.on({
						mouseenter: function () {
							$(this).css("background", "rgb(160, 243, 169)");
						},
						mouseleave: function () {
							$(this).css("background", "rgb(215,215,215)");
						}
					}, '.dark-icon');

					$mainContainer.on({
						mouseenter: function () {
							$(this).css({
								"cursor": "pointer"
							});
						},
						mouseleave: function () {
							$(this).css({
								"cursor": "auto"
							});
						}
					}, ".month-name-calendar");

					//$(".menu-item").hover(function () {
					//	$(this).css({
					//		"cursor": "pointer",
					//		"font-size": ".9em"
					//	});
					//}, function () {
					//	$(this).css({
					//		"cursor": "auto",
					//		"font-size": ".8em"
					//	});
					//});

					$("#leftSide").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
					});
					$("#rightSide").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
					});

					var $leftSideCalendar = $("#leftSideCalendar");
					var $rightSideCalendar = $("#rightSideCalendar");
					var $leftSideDetails = $("#leftSideDetails");
					var $rightSideLobby = $("#rightSideLobby");

					$leftSideCalendar.hover(function () {
						$(this).css({
							//"backgroundPosition": "left",
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							//"backgroundPosition": "right",
							"cursor": "auto"
						});
					});
					$(".calendar-navigation-arrows-left").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});

						$leftSideCalendar.css({
							//"backgroundPosition": "left"

						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
						$leftSideCalendar.css({
							//"backgroundPosition": "right"

						});
					});
					$rightSideCalendar.hover(function () {
						$(this).css({
							//"backgroundPosition": "right",
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							//"backgroundPosition": "left",
							"cursor": "auto"
						});
					});
					$(".calendar-navigation-arrows-right").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});

						$rightSideCalendar.css({
							//"backgroundPosition": "right"

						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
						$rightSideCalendar.css({
							//"backgroundPosition": "left"

						});
					});

					$(".lobby-navigation-arrows-right").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});

						$rightSideLobby.css({
							//"backgroundPosition": "right"

						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
						$rightSideLobby.css({
							//"backgroundPosition": "left"

						});
					});
					$(".details-navigation-arrows-left").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});

						$leftSideDetails.css({
							//"backgroundPosition": "left"

						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
						$leftSideDetails.css({
							//"backgroundPosition": "right"

						});
					});
					$leftSideDetails.hover(function () {
						$(this).css({
							//"backgroundPosition": "left",
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							//"backgroundPosition": "right",
							"cursor": "auto"
						});
					});
					$rightSideLobby.hover(function () {
						$(this).css({
							//"backgroundPosition": "right",
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							//"backgroundPosition": "left",
							"cursor": "auto"
						});
					});

					var $closeBtnAddEventContainer = $(".btn-close");

					$closeBtnAddEventContainer.hover(function () {
						$(this).css({
							"bottom": "0",
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							"bottom": "1px",
							"cursor": "auto"
						});
					});

					$("#btnAddNewEvent").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
					});

					$(".link").hover(function () {
						$(this).css({
							"cursor": "pointer"
						});
					}, function () {
						$(this).css({
							"cursor": "auto"
						});
					});

					$(".login-link").hover(function () {
						$(this).css({
							"color":"rgb(73, 226, 140)"						
						});
					}, function () {
						$(this).css({
							"color":"gray"
						});
					});

				}();

				this.Initialize.InitializeClick = function () {
					var $txtbox = $("#registerPageContainer .register-birthdate-txtbox");
					$txtbox.keyup(function(){
					
						$("#registerPageContainer #birthDateValidationErrorMsg").hide();
						$txtbox.removeClass("input-validation-error");			
					});

					//$(".szkolenia-btn").click(function () {
					//	$(".selected-content-container").slideUp("slow");
					//});

					//$(".menu-item-container").click(function () {

					//	$(".selected-content-container").slideDown("slow");
					//});

					//$(".moje-sprawy-text").click(function () {

					//	$("#moje-sprawy-container").slideDown();
					//});

					//$(".moje-sprawy-btn").click(function () {

					//	$("#moje-sprawy-container").slideUp();
					//});

					var $mainContainer = $("#mainContainer");

					//$mainContainer.on("click", ".calendar-cell", function (event) {
					//	window.location = "#2";
					//});

					$mainContainer.on("click", "#leftSideCalendar", function (event) {
						window.location = "#0";
					});
					$mainContainer.on("click", ".calendar-navigation-arrows-left", function (event) {
						window.location = "#0";
					});
					$mainContainer.on("click", "#rightSideCalendar", function (event) {
						window.location = "#2";
					});
					$mainContainer.on("click", ".calendar-navigation-arrows-right", function (event) {
						window.location = "#2";
					});
					$mainContainer.on("click", "#rightSideLobby", function (event) {
						window.location = "#1";
					});
					$mainContainer.on("click", ".lobby-navigation-arrows-right", function (event) {
						window.location = "#1";
					});
					$mainContainer.on("click", "#leftSideDetails", function (event) {
						window.location = "#1";
					});
					$mainContainer.on("click", ".details-navigation-arrows-left", function (event) {
						window.location = "#1";
					});

					//$(".addNewEvent-cellIcon").click(function (event) {
					//	$(this).hide();

					//	var $overlay = $("#calendar").siblings(".dotted-page-overlay");
					//	$overlay.css("opacity", 1);
					//	$overlay.show();

					//	var txtDay = $(this).parent().find(".day").text();
					//	$("#hiddenDay").attr("name", txtDay);
					//	$("#addNewEventContainer").show();

					//	event.stopPropagation();
					//});

				}();
			}
		};

		mainProgram.Initialize();

	});

</script>
