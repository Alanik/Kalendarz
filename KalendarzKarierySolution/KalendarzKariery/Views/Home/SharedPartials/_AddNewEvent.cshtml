@model KalendarzKarieryData.Models.ViewModels.AddEventViewModel

<div id="add-new-event-container">

	<div class="large-popup-header">
		<div style="width: 100%; z-index: 2; position: absolute; top: 50px; border-top: 1px solid rgb(221,221,221); border-bottom: 1px solid rgb(247,247,247);"></div>
		<div id="btnClose-AddEventContainer" class="btn-close" data-bind="click: $root.closeAddNewEventPopup()"><span class="close-text">zamknij</span></div>
	</div>


	<section class="add-event-body">
		<div class="add-event-form-container">

			@using (Html.BeginForm("Post", "api/Events", FormMethod.Post, new { id = "addEventForm" }))
   {
				<fieldset class="add-event-fieldset">

					<legend>Dodaj Wydarzenie<span style="margin-left: 10px; font-size: 20px; color: rgb(184, 184, 167);" data-bind="text: $root.event.privacyLevel.name"></span></legend>

					<div data-bind="with: event">

						<div class="div-separator">
							<label>Kategoria: </label>
							<select id="kindSelectBox" name="kindSelectBox" data-bind="value: kind.kindName">
								<option value="Wydarzenie">wydarzenie</option>
								<option value="Zajęcia">zajęcia</option>
								<option value="Szkolenie">szkolenie</option>
								<option value="Kurs">kurs</option>
								<option value="Spotkanie">spotkanie</option>
								<option value="Inne">inne</option>
							</select>
						</div>

						<div class="div-separator">
							<div class="margin-left-150">
								@Html.ValidationMessageFor(m => m.Event.Title)
							</div>
							<div>
								@Html.LabelFor(m => m.Event.Title, new { @class = "form-label" })
								@Html.TextBoxFor(m => m.Event.Title, new { maxlength = 30, data_bind ="value: title"})
							</div>
						</div>

						<div class="div-separator">
							<div style="display: inline-block;">
								<label>Godzina rozpoczęcia: </label>
								<select id="startHourSelectBox" data-bind="value: startDate.startHour">
									@for (int i = 7; i < 22; i++)
		 {
										<option value="@i">@i</option>
		 }
								</select>
							</div>
							<div style="display: inline-block;">
								<span>: </span>
								<select id="startMinuteSelectBox" data-bind="value: startDate.startMinute">
									@for (int i = 0; i < 60; i++)
		 {
										<option value="@i">@i</option>
		 }

								</select>
							</div>
						</div>
						<div class="div-separator">
							<div style="display: inline-block;">
								<label>Godzina zakończenia: </label>
								<select id="endHourSelectBox" data-bind="value: startDate.endHour">
									@for (int i = 7; i < 21; i++)
		 {
										<option value="@i">@i</option>
		 }
								</select>
							</div>
							<div style="display: inline-block;">
								<span>: </span>
								<select id="endMinuteSelectBox" data-bind="value: startDate.endMinute">
									@for (int i = 0; i < 60; i++)
		 {
										<option value="@i">@i</option>
		 }

								</select>
							</div>
						</div>

						<div class="div-separator">
							<div>
								@Html.LabelFor(m => m.Event.StartDate, new { @class = "form-label" })
								@Html.TextBox("date", string.Empty, new { maxlength = 10, size = 7, disabled = true, id = "Event_StartDate" })
							</div>
						</div>

						<div id="addNewEventAddressLink" class="div-separator margin-left-150"  data-bind="click: function(){ $root.showGivenFieldInAddNewEventPopupOnClick($element)}">
							<p class="underline">Dodaj adres</p>
						</div>

						<div id="addNewEventAddressContainer" class="div-separator"  style="display: none;">
							<div>
								@Html.LabelFor(m => m.Address.Street, new { @class = "form-label" })
								@Html.TextBoxFor(m => m.Address.Street, new { maxlength = 30, data_bind="value: address.street"})
								@Html.ValidationMessageFor(m => m.Address.Street)
							</div>
							<div>
								@Html.LabelFor(m => m.Address.City, new { @class = "form-label" })
								@Html.TextBoxFor(m => m.Address.City, new { maxlength = 30, data_bind="value: address.city" })
								@Html.ValidationMessageFor(m => m.Address.City)
							</div>
							<div>
								@Html.LabelFor(m => m.Address.ZipCode, new { @class = "form-label" })
								@Html.TextBoxFor(m => m.Address.ZipCode, new { maxlength = 6, @size=4, data_bind="value: address.zipCode"})
								@Html.ValidationMessageFor(m => m.Address.ZipCode)
							</div>
						</div>
						
						<div id="addNewEventDescriptionLink" class="div-separator margin-left-150" data-bind="click: function () { $root.showGivenFieldInAddNewEventPopupOnClick($element) }">
							<p class="underline">Dodaj opis</p>
						</div>

						<div id="addNewEventDescriptionContainer" class="div-separator" style="display: none;">
							<div>
								@Html.LabelFor(m => m.Event.Description, new { @class = "form-label", @style = "vertical-align:top;" })
								@Html.TextAreaFor(m => m.Event.Description, new { cols = 30, rows = 3, maxlength = 100, data_bind="value: description" })
								@Html.ValidationMessageFor(m => m.Event.Description)
							</div>
						</div>

						<div id="addNewEventDetailsLink" class="div-separator margin-left-150" data-bind="click: function () { $root.showGivenFieldInAddNewEventPopupOnClick($element) }">
							<p class="underline">Dodaj szczegóły</p>
						</div>

						<div id="btnAddNewEventDetailsContainer" class="div-separator" style="display: none;">
							@Html.LabelFor(m => m.Event.Details, new { @class = "form-label", @style = "vertical-align:top;" })
							@Html.TextAreaFor(m => m.Event.Details, new { cols = 30, rows = 5, maxlength = 500, data_bind="value: details" })
							@Html.ValidationMessageFor(m => m.Event.Details)
						</div>

						@*<div>
						<label>Dodane przez: </label>
						<input type="text" data-bind="value: author" />
						</div>*@

					</div>

					<input type="hidden" name="" id="hiddenDay" />

					<button id="btnAddNewEvent" class="myButton-white margin-left-150" data-bind="click: $root.addEventOnClick.bind($data, $data.privacyLevels)">Dodaj</button>
				</fieldset>
   }
		</div>
	</section>
</div>
